# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:

        def FindMin(node):
            while node.left:
                node = node.left
            return node
        def Delete(root, key):
            if not root:
                return root
            if key < root.val:
                root.left = Delete(root.left, key)
            elif key > root.val:
                root.right = Delete(root.right, key)
            else:
                if not root.left:
                    return root.right
                if not root.right:
                    return root.left
                successor = FindMin(root.right)
                root.val = successor.val
                root.right = Delete(root.right, successor.val)
            return root
        x = Delete(root,key)
        return x
