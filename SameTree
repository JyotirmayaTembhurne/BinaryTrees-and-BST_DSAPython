# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        # def DFS(root,arr,f=None):
        #     if not root:
        #         return 0
        #     if not f:
        #         f = 0
        #     stack = [root]
        #     while stack:
        #         current = stack.pop()
        #         arr.append(current.val)
        #         if current.right:
        #             f-=1
        #             stack.append(current.right)
        #         if current.left:
        #             f+=1
        #             stack.append(current.left)
        #     return f
        # P,Q = list(),list()
        # fp = DFS(p,P)
        # fq = DFS(q,Q)
        # return P == Q and fp == fq
        return str(p) == str(q)



        
