# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        def BinaryTree(inorder, postorder):
            if not postorder or not inorder:
                return None
            root_val = postorder[-1]  # Get the root value from the end of postorder list
            root = TreeNode(root_val)
            index = inorder.index(root.val)
            lsize = index
            root.left = BinaryTree(inorder[: lsize], postorder[: lsize])
            root.right = BinaryTree(inorder[lsize + 1 :], postorder[lsize : -1])
            return root
        return BinaryTree(inorder,postorder)
